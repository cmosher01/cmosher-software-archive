public class Pair extends java.lang.Object implements java.lang.Cloneable, java.lang.Comparable
{
    private java.lang.Object a;
    private java.lang.Object b;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        Pair this;
        java.lang.Object a, b, $r1, $r3;
        java.lang.CloneableReference $r0, $r2;

        this := @this: Pair;
        a := @parameter0: java.lang.Object;
        b := @parameter1: java.lang.Object;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.lang.CloneableReference;
        specialinvoke $r0.<java.lang.CloneableReference: void <init>(java.lang.Object)>(a);
        $r1 = virtualinvoke $r0.<java.lang.CloneableReference: java.lang.Object clone()>();
        this.<Pair: java.lang.Object a> = $r1;
        $r2 = new java.lang.CloneableReference;
        specialinvoke $r2.<java.lang.CloneableReference: void <init>(java.lang.Object)>(b);
        $r3 = virtualinvoke $r2.<java.lang.CloneableReference: java.lang.Object clone()>();
        this.<Pair: java.lang.Object b> = $r3;
        return;
    }

    public java.lang.Object a()
    {
        Pair this;
        java.lang.CloneableReference $r0;
        java.lang.Object $r1, $r2;

        this := @this: Pair;
        $r0 = new java.lang.CloneableReference;
        $r1 = this.<Pair: java.lang.Object a>;
        specialinvoke $r0.<java.lang.CloneableReference: void <init>(java.lang.Object)>($r1);
        $r2 = virtualinvoke $r0.<java.lang.CloneableReference: java.lang.Object clone()>();
        return $r2;
    }

    public java.lang.Object b()
    {
        Pair this;
        java.lang.CloneableReference $r0;
        java.lang.Object $r1, $r2;

        this := @this: Pair;
        $r0 = new java.lang.CloneableReference;
        $r1 = this.<Pair: java.lang.Object b>;
        specialinvoke $r0.<java.lang.CloneableReference: void <init>(java.lang.Object)>($r1);
        $r2 = virtualinvoke $r0.<java.lang.CloneableReference: java.lang.Object clone()>();
        return $r2;
    }

    public java.lang.String toString()
    {
        Pair this;
        java.lang.Object $r0, $r9;
        java.lang.StringBuffer $r1, $r2, $r3, $r5, $r6, $r7, $r10, $r11, $r12, $r14, $r15, $r16;
        java.lang.String $r4, $r8, $r13, $r17;

        this := @this: Pair;
        $r0 = this.<Pair: java.lang.Object a>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r0);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");
        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();
        $r9 = this.<Pair: java.lang.Object b>;
        $r10 = new java.lang.StringBuffer;
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();
        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);
        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);
        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();
        $r14 = new java.lang.StringBuffer;
        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();
        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);
        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");
        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r17;
    }

    public java.lang.Object clone()
    {
        Pair this, clon;
        java.lang.Object $r0;
        java.lang.CloneNotSupportedException cantHappen;

        this := @this: Pair;
        clon = null;

     label0:
        $r0 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();
        clon = (Pair) $r0;

     label1:
        goto label3;

     label2:
        cantHappen := @caughtexception;
        goto label3;

     label3:
        return clon;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public boolean equals(java.lang.Object)
    {
        Pair this, that;
        java.lang.Object o, $r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;

        this := @this: Pair;
        o := @parameter0: java.lang.Object;
        $z0 = o instanceof Pair;
        if $z0 != 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        if $z1 == 0 goto label2;

        return 0;

     label2:
        that = (Pair) o;
        $r0 = this.<Pair: java.lang.Object a>;
        $r1 = that.<Pair: java.lang.Object a>;
        $z3 = specialinvoke this.<Pair: boolean eq(java.lang.Object,java.lang.Object)>($r0, $r1);
        if $z3 == 0 goto label3;

        $r2 = this.<Pair: java.lang.Object b>;
        $r3 = that.<Pair: java.lang.Object b>;
        $z4 = specialinvoke this.<Pair: boolean eq(java.lang.Object,java.lang.Object)>($r2, $r3);
        if $z4 == 0 goto label3;

        $z2 = 1;
        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    private boolean eq(java.lang.Object, java.lang.Object)
    {
        Pair this;
        java.lang.Object x, y;
        boolean $z0, $z1;

        this := @this: Pair;
        x := @parameter0: java.lang.Object;
        y := @parameter1: java.lang.Object;
        if x != null goto label0;

        if y != null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        if $z0 == 0 goto label2;

        return 1;

     label2:
        if x != null goto label3;

        return 0;

     label3:
        if y != null goto label4;

        return 0;

     label4:
        $z1 = virtualinvoke x.<java.lang.Object: boolean equals(java.lang.Object)>(y);
        return $z1;
    }

    public int compareTo(java.lang.Object)
    {
        Pair this, that;
        java.lang.Object o, $r0, $r1, $r2, $r3;
        int c;

        this := @this: Pair;
        o := @parameter0: java.lang.Object;
        that = (Pair) o;
        $r0 = this.<Pair: java.lang.Object a>;
        $r1 = that.<Pair: java.lang.Object a>;
        c = specialinvoke this.<Pair: int 'cmp'(java.lang.Object,java.lang.Object)>($r0, $r1);
        if c != 0 goto label0;

        $r2 = this.<Pair: java.lang.Object b>;
        $r3 = that.<Pair: java.lang.Object b>;
        c = specialinvoke this.<Pair: int 'cmp'(java.lang.Object,java.lang.Object)>($r2, $r3);
        goto label0;

     label0:
        return c;
    }

    private int 'cmp'(java.lang.Object, java.lang.Object)
    {
        Pair this;
        java.lang.Object x, y;
        boolean $z0;
        java.lang.Comparable $r0;
        int $i0;

        this := @this: Pair;
        x := @parameter0: java.lang.Object;
        y := @parameter1: java.lang.Object;
        if x != null goto label0;

        if y != null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        if $z0 == 0 goto label2;

        return 0;

     label2:
        if x != null goto label3;

        return -1;

     label3:
        if y != null goto label4;

        return 1;

     label4:
        $r0 = (java.lang.Comparable) x;
        $i0 = interfaceinvoke $r0.<java.lang.Comparable: int compareTo(java.lang.Object)>(y);
        return $i0;
    }

    public int hashCode()
    {
        Pair this;
        int h, $i0, $i1;
        java.lang.Object $r0, $r1, $r2, $r3;

        this := @this: Pair;
        h = 17;
        h = h * 37;
        $r0 = this.<Pair: java.lang.Object a>;
        if $r0 != null goto label0;

        $i0 = 0;
        goto label1;

     label0:
        $r1 = this.<Pair: java.lang.Object a>;
        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

     label1:
        h = h + $i0;
        h = h * 37;
        $r2 = this.<Pair: java.lang.Object b>;
        if $r2 != null goto label2;

        $i1 = 0;
        goto label3;

     label2:
        $r3 = this.<Pair: java.lang.Object b>;
        $i1 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

     label3:
        h = h + $i1;
        return h;
    }
}
