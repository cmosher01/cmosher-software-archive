#!/bin/bash
set -e

myname=$0
if [ -s "$myname" ] && [ -x "$myname" ]; then
    # $myname is already a valid file name
    VPATH=$myname
else
    case "$myname" in
    /*) exit 1;;             # absolute path - do not search PATH
    *)
        # Search all directories from the PATH variable. Take
        # care to interpret leading and trailing ":" as meaning
        # the current directory; the same is true for "::" within
        # the PATH.
    
        # Replace leading : with . in PATH, store in p
        p=${PATH/#:/.:}
        # Replace trailing : with .
        p=${p//%:/:.}
        # Replace :: with :.:
        p=${p//::/:.:}
        # Temporary input field separator, see FAQ #1
        OFS=$IFS IFS=:
        # Split the path on colons and loop through each of them
        for dir in $p; do
                [ -f "$dir/$myname" ] || continue # no file
                [ -x "$dir/$myname" ] || continue # not executable
                VPATH=$dir/$myname
                break           # only return first matching file
        done
        # Restore old input field separator
        IFS=$OFS
        ;;
    esac
fi

if [ ! -f "$VPATH" ]; then
    echo >&2 "cannot find full path name: $myname"
    exit 1
fi

VPATH=$(dirname "$VPATH")
VPATH=$(cd $VPATH; pwd)





PREFIX=/usr/local

while getopts "hp:" OPT
do
	case "$OPT" in
		p)
			PREFIX=$OPTARG
		;;
		h)
			cat <<EOF
usage:
	./configure [OPTIONS]
options:
	-h         display this message
	-p PATH    installation prefix [/usr/local]
EOF
			exit 0
		;;
		*)
			exit 1
		;;
	esac
done





test "$CA65" || CA65=ca65

if ! which "$CA65" >/dev/null 2>&1
then
	echo "Cannot find ca65 assembler (http://www.cc65.org)." >&2
	echo "Install it, or set env var CA65 to point to it." >&2
	exit 1;
fi



test "$LD65" || LD65=ld65

if ! which "$LD65" >/dev/null 2>&1
then
	echo "Cannot find ld65 linker (http://www.cc65.org)." >&2
	echo "Install it, or set env var LD65 to point to it." >&2
	exit 1;
fi





cat <<EOF >./Makefile
#DO NOT EDIT
#This Makefile is generated by the configure script.
VPATH = $VPATH
CA65 = $CA65
LD65 = $LD65
PREFIX = $PREFIX
include $VPATH/Makefile.mk
EOF
