GEOGRAPHY LOOKUP
----------------
***TODO:
need to handle county names specially (because they need state name/abbrev too)
    (note abbrev matching is exact, name matching is fuzzy (but don't let
    user choose if there are multiple matches; just use the best one))





GeographicNameResolver (one object instance per application)
----------------------
GeographicNameResolver(minimumSimilarity)
iterator<GeoNameMatch> resolve(geoName)
    iterator could return 0, 1, or more matches

subclass for each type: state name, state abbrev, county, dma, msa
(note: need to handle state abbrev specially: must match exactly,
not fuzzy; but use same interface as others)


GeoNameMatch
------------
getGeo()
compareTo()
    orders by similarity (most similar first)



Geo
---
getName()
getCode()

subclass for each type




INTERNAL GEOGRAPHY
------------------

for each geo type (state name, county, dma, msa)
    read all geos (name,code) into cache
    create map of each exact name (uppercase) to geo
    create map of each "word" to (list of) geos (where word is > 3 chars; handle punct.?)
(use exact map first, if no match use fuzzy:)
(use word map (key set) to do fuzzy search on)



SELECT geoTypeID, geoID, name FROM GeographicName ORDER BY geoTypeID


(get abbreviations)
SELECT
    A.abbreviation,
    G.name fullName,
    G.geoID
FROM
    SupportedGeoType S
    INNER JOIN DA_Prod.Geo G ON G.geoTypeID = S.geoTypeID
    INNER JOIN DA_Prod.GeoAbbreviation A ON A.geoID = G.geoID
WHERE
    S.bAbbrev = 'T'







