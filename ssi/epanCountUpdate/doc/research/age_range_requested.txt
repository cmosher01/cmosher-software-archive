age ranges in sample counts
---------------------------

00-03
00-11
00-16
13-17
16-17        kids (HH memb)
---------------------------
18+          panelists
18-21
18-24
18-35
18-49
20-49
20-59
22-34
24-45
25+
25-45
25-65
27-55
30-50
35-49
40-65
50+
60+

(also have requests for "no kids")





all specific ages mentioned as range endpoints:
----------------------------------------------
00
03
11
13
16
17
-------
18
20
21
22
24
25
27
30
34
35
40
45
49
50
55
59
60
65




idea: could denormalize panelist and hhmember, to give each of these
categories to a panelist:

ageInYears         (panelist's age, in years)
hasMemberMos00_06  (true if panelist has HH member aged 0 to under 6 months)
hasMemberMos06_12  ( " aged 6 months to under 12 months)
hasMemberMos12_18  ( " 12 - 18 )
hasMemberMos18_24  ( " 18 - 24 )
hasMember02        (true if panelist has HH memeber aged 2 years to under 3 years)
hasMember03        ( " 3 to under 4 )
hasMember04        ( etc. )
hasMember05
hasMember06
hasMember07
hasMember08
hasMember09
hasMember10
hasMember11
hasMember12
hasMember13
hasMember14
hasMember15
hasMember16
hasMember17
(also panelist gender)

(Oracle note: could have a bitmap index on each of these columns)


Hypothesis: if a panelist has more than one member of his/her household
in a requested age range, then still only count "one" for that panelist,
never "two" or more.

It seems as though requests are for children in general,
and not of specifically male or female children.







Oracle test:

-- Calculate panelists' gender and age in years.
SELECT
    P.panelistID,
    TRUNC(MONTHS_BETWEEN(SYSDATE,M.dateBorn)/12) ageInYears,
    M.genderID genderID
FROM
    Panelist P
    INNER JOIN PanelistHHMember M ON
        M.panelistID = P.panelistID AND
        M.bPanelist = 'T'
WHERE
    P.bActive = 'T' AND
    P.countryID = 245


-- Calculate children aged 2-17 years
SELECT
    panelistID,
    MAX(hasMember02) hasMember02,
    MAX(hasMember03) hasMember03,
    MAX(hasMember04) hasMember04,
    MAX(hasMember05) hasMember05,
    MAX(hasMember06) hasMember06,
    MAX(hasMember07) hasMember07,
    MAX(hasMember08) hasMember08,
    MAX(hasMember09) hasMember09,
    MAX(hasMember10) hasMember10,
    MAX(hasMember11) hasMember11,
    MAX(hasMember12) hasMember12,
    MAX(hasMember13) hasMember13,
    MAX(hasMember14) hasMember14,
    MAX(hasMember15) hasMember15,
    MAX(hasMember16) hasMember16,
    MAX(hasMember17) hasMember17
FROM
(
    SELECT
        panelistID,
        DECODE(ageInYears,02,1,0) hasMember02,
        DECODE(ageInYears,03,1,0) hasMember03,
        DECODE(ageInYears,04,1,0) hasMember04,
        DECODE(ageInYears,05,1,0) hasMember05,
        DECODE(ageInYears,06,1,0) hasMember06,
        DECODE(ageInYears,07,1,0) hasMember07,
        DECODE(ageInYears,08,1,0) hasMember08,
        DECODE(ageInYears,09,1,0) hasMember09,
        DECODE(ageInYears,10,1,0) hasMember10,
        DECODE(ageInYears,11,1,0) hasMember11,
        DECODE(ageInYears,12,1,0) hasMember12,
        DECODE(ageInYears,13,1,0) hasMember13,
        DECODE(ageInYears,14,1,0) hasMember14,
        DECODE(ageInYears,15,1,0) hasMember15,
        DECODE(ageInYears,16,1,0) hasMember16,
        DECODE(ageInYears,17,1,0) hasMember17
    FROM
    (
        SELECT
            Pan.panelistID,
            TRUNC(MONTHS_BETWEEN(SYSDATE,Mem.dateBorn)/12) ageInYears
        FROM
            da_prod.Panelist Pan
            INNER JOIN da_prod.PanelistHHMember Mem ON
                Mem.panelistID = Pan.panelistID AND
                Mem.bPanelist = 'F' AND
                Mem.dateBorn BETWEEN ADD_MONTHS(SYSDATE+1,-18*12) AND ADD_MONTHS(SYSDATE,-2*12)
        WHERE
            Pan.bActive = 'T' AND
            Pan.countryID = 245
    )
)
GROUP BY
    panelistID


-- Calculate children under 2
SELECT
    panelistID,
    MAX(hasMemberMos00_06) hasMemberMos00_06,
    MAX(hasMemberMos06_12) hasMemberMos06_12,
    MAX(hasMemberMos12_18) hasMemberMos12_18,
    MAX(hasMemberMos18_24) hasMemberMos18_24,
FROM
(
    SELECT
    panelistID,
    DECODE(ageInHalfYears,0,1,0) hasMemberMos00_06,
    DECODE(ageInHalfYears,1,1,0) hasMemberMos06_12,
    DECODE(ageInHalfYears,2,1,0) hasMemberMos12_18,
    DECODE(ageInHalfYears,3,1,0) hasMemberMos18_24
    FROM
    (
        SELECT
            Pan.panelistID,
            TRUNC(MONTHS_BETWEEN(SYSDATE,Mem.dateBorn)/6) ageInHalfYears
        FROM
            da_prod.Panelist Pan
            INNER JOIN da_prod.PanelistHHMember Mem ON
                Mem.panelistID = Pan.panelistID AND
                Mem.bPanelist = 'F' AND
                Mem.dateBorn BETWEEN ADD_MONTHS(SYSDATE+1,-2*12) AND SYSDATE
        WHERE
            Pan.bActive = 'T' AND
            Pan.countryID = 245
    )
)
GROUP BY
    panelistID
