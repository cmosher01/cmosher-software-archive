              INCLUDE "SWEET16.A65"
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;                              ;
;      6502 RELOCATION         ;
;       SUBROUTINE             ;
;                              ;
;    1. DEFINE BLOCKS          ;
;       *A4<A1.A2^Y            ;
;       (^Y IS CTRL-Y)         ;
;                              ;
;    2. FIRST SEGMENT          ;
;       *A4<A1.A2^Y            ;
;       (IFCODE)               ;
;                              ;
;       *A4<A1.A2M             ;
;       (IFMOVE)               ;
;                              ;
;    3. SUBSEQUENT SEGMENTS    ;
;       *.A2^Y OR *.A2M        ;
;                              ;
;      WOZ 11-10-77            ;
;     APPLE COMPUTER INC.      ;
;                              ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;    RELOCATION SUBROUTINE EQUATES
;
R1L           EQU $02          ; SWEET16 REG 1.
INST          EQU $0B          ; 3-BYTE INST FIELD.
LENGTH        EQU $2F          ; LENGTH CODE
YSAV          EQU $34          ; CMND BUF POINTER
A1L           EQU $3C          ; APPLE-II MON PARAM AREA.
A4L           EQU $42          ; APPLE-II MON PARAM REG 4
IN            EQU $0200        ; INPUT BUFFER
SW16          EQU $F699        ; SWEET 16 ENTRY
INSDS2        EQU $F88E        ; DISASSEMBLER ENTRY
NXTA4         EQU $FCB4        ; POINTER INCR SUBR
FRMBEG        EQU $01          ; SOURCE BLOCK BEGIN
FRMEND        EQU $02          ; SOURCE BLOCK END
TOBEG         EQU $04          ; DEST BLOCK BEGIN
ADR           EQU $06          ; ADR PART OF INST.

;
;    6502 RELOCATION SUBROUTINE
;
              ORG $D4DC
;             OBJ $A4DC
RELOC         LDY YSAV          ; CMND BUF POINTER
              LDA IN,Y          ; NEXT CMD CHAR
              CMP #$AA          ; '4'?
              BNE RELOC2        ; NO, RELOC CODE SEQ.
              INC YSAV          ; ADVANCE POINTER
              LDX #$07          ; 
INIT          LDA A1L,X         ; MOVE BLOCK PARAMS
              STA R1L,X         ; FROM APPLE-II MON
              DEX               ; AREA TO SW16 AREA
              BPL INIT          ; R1=SOURCE BEG,R2=
              RTS               ; SOURCE END, R4=DEST BEG.
RELOC2        LDY #$02          ; 
GETINS        LDA (A1L),Y       ; COPY 3 BYTES TO
              STA INST,Y        ; SW16 AREA
              DEY               ; 
              BPL GETINS        ; 
              JSR INSDS2        ; CALCULATE LENGTH OF
              LDX LENGTH        ; INST FROM OPCODE.
              DEX               ; 0=1 BYTE, 1=2 BYTES,
              BNE XLATE         ; 2=3 BYTES
              LDA INST          ; 
              AND #$0D          ; WEED OUT NON-ZERO-PAGE
              BEQ STINST        ; 2 BYTE INSTS (IMM).
              AND #$08          ; IF ZERO PAGE ADR
              BNE STINST        ; THEN CLEAR HIGH BYTE
              STA INST+2        ; 

XLATE         JSR SW16          ; IF ADR OF ZERO PAGE
                  W_LD  FRMEND  ; OR ABS IS IN SOURCE
                  W_CPR ADR     ; (FRM) BLOCK THEN
                  W_BNC SW16RT  ; SUBSTITUTE
                  W_LD  ADR     ; ADR - SOURCE SEG + DEST BEG
                  W_SUB FRMBEG
                  W_BNC SW16RT
                  W_ADD TOBEG
                  W_ST  ADR
SW16RT
                  W_RTN

STINST        LDX #$0           ; 
STINS2        LDA INST,X        ; 
              STA (A4L),Y       ; COPY LENGTH BYTES
              INX               ; OF INST FROM SW16 AREA TO
              JSR NXTA4         ; 
              DEC LENGTH        ; DEST SEGMENT. UPDATE
              BPL STINS2        ; SOURCE, DEST SEGMENT
              BCC RELOC2        ; POINTERS. LOOP IF NOT
              RTS               ; BEYOND SOURCE SEQ END.
