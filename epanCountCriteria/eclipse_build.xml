<?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================
     April 7, 2005 4:55:31 PM

     buildJaxbEnum
     
     Chris Mosher
     ====================================================================== -->
<project name="buildJaxbEnumFromDB" default="buildJaxbEnumFromDB">
    <description>
        Designed to be called from the Eclipse IDE environemnt,
        this build-file is used to build a JAXB-style XML schema
        file that defines an enumeration based on name/value
        pairs read from a database. It also compiles schema
        using JAXB binding compiler to generate java class files.
        It's mostly just a demonstration of how to do these tasks,
        not a formal production-quality build file.

		This build file depends on the following projects:
		    oraclejdbc
		    jaxb
		    SurveySampling
		You will need to add the above jars or folders to your Ant
		Classpath in Eclipse in order to run this build script.
    </description>

    <macrodef name="select">
        <attribute name="src" />
        <attribute name="output" />
        <attribute name="username" default="${databaseUsername}" />
        <attribute name="password" default="${databasePassword}" />
        <sequential>
            <sql
                driver="${databaseDriver}"
                userid="@{username}" password="@{password}"
                url="${databaseConnect}"
                print="true"
                showheaders="false"
                output="@{output}"
                caching="true"
                src="@{src}"
            />
            <replace file="@{output}">
                <replacetoken>&#x0D;&#x0A;0 rows affected&#x0D;&#x0A;</replacetoken>
            </replace>
        </sequential>
    </macrodef>

    <property name="dir" location="." />
    <property name="databaseDriver" value="oracle.jdbc.driver.OracleDriver" />
    <property name="databaseUsername" value="projectdirector" />
    <property name="databasePassword" value="darkwater" />
    <property name="databaseConnect" value="jdbc:oracle:thin:@dev1.surveysampling.com:1521:DEV" />
    <property name="enumNamespace" value="http://www.surveysampling.com/emailpanel/counts/api/criteria" />

    <target name="buildJaxbEnumFromDB" depends="selectEnumsFromDB,buildJaxbEnums,jaxbCompile" />

    <target name="selectEnumsFromDB">
        <property name="databaseDriver" value="oracle.jdbc.driver.OracleDriver" />
        <property name="databaseUsername" value="projectdirector" />
        <property name="databasePassword" value="darkwater" />
        <property name="databaseConnect" value="jdbc:oracle:thin:@dev1.surveysampling.com:1521:DEV" />

        <select src="gender.sql" output="gender.xml" />
        <select src="geography.sql" output="geography.xml" username="epancount" password="icountrows" />
        <select src="married.sql" output="married.xml" />
        <select src="education.sql" output="education.xml" />
        <select src="ethnicity.sql" output="ethnicity.xml" />
        <select src="income.sql" output="income.xml" />
    </target>

    <target name="buildJaxbEnums">
        <macrodef name="buildJaxbEnum">
            <attribute name="src" />
            <attribute name="output" />
            <attribute name="namespace" />
            <attribute name="typeName" />
            <attribute name="baseType" default="int" />
            <sequential>
                <xslt in="@{src}" style="buildJaxbEnum.xsl" out="@{output}">
                    <param name="namespace" expression="@{namespace}" />
                    <param name="typeName" expression="@{typeName}" />
                    <param name="baseType" expression="@{baseType}" />
                </xslt>
            </sequential>
        </macrodef>
        <property
            name="enumNamespace"
            value="http://www.surveysampling.com/emailpanel/counts/api/criteria"
        />
        <buildJaxbEnum
            src="gender.xml"
            output="epanCount_api_criteria_gender.xsd"
            namespace="${enumNamespace}"
            typeName="gender_enum_type"
        />
        <buildJaxbEnum
            src="geography.xml"
            output="epanCount_api_criteria_geography.xsd"
            namespace="${enumNamespace}"
            typeName="geography_enum_type"
            baseType="string"
        />
        <buildJaxbEnum
            src="married.xml"
            output="epanCount_api_criteria_married.xsd"
            namespace="${enumNamespace}"
            typeName="married_enum_type"
        />
        <buildJaxbEnum
            src="education.xml"
            output="epanCount_api_criteria_education.xsd"
            namespace="${enumNamespace}"
            typeName="education_enum_type"
        />
        <buildJaxbEnum
            src="ethnicity.xml"
            output="epanCount_api_criteria_ethnicity.xsd"
            namespace="${enumNamespace}"
            typeName="ethnicity_enum_type"
        />
        <buildJaxbEnum
            src="income.xml"
            output="epanCount_api_criteria_income.xsd"
            namespace="${enumNamespace}"
            typeName="income_enum_type"
        />
    </target>

    <target name="jaxbCompile">
        <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
            <classpath>
                <fileset dir="../jaxb-1-0-4" includes="*.jar" />
            </classpath>
        </taskdef>
        <delete verbose="true" failonerror="false" includeEmptyDirs="true">
            <fileset defaultexcludes="no" dir="src">
                <include name="**/*" />
            </fileset>
        </delete>
        <mkdir dir="src" />
        <xjc schema="epanCount_api_criteria.xsd" target="src" />
    </target>
</project>
